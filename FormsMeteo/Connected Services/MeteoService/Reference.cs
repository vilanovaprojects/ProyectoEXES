//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FormsMeteo.MeteoService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserDetails", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class UserDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string passwordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string userNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                if ((object.ReferenceEquals(this.passwordField, value) != true)) {
                    this.passwordField = value;
                    this.RaisePropertyChanged("password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string userName {
            get {
                return this.userNameField;
            }
            set {
                if ((object.ReferenceEquals(this.userNameField, value) != true)) {
                    this.userNameField = value;
                    this.RaisePropertyChanged("userName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Meteo", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class Meteo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ComentariosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime FechaPrevisionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal HumedadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] MapaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PrecipitacionesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProvinciaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TempMaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TempMinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValoracionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VientoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comentarios {
            get {
                return this.ComentariosField;
            }
            set {
                if ((object.ReferenceEquals(this.ComentariosField, value) != true)) {
                    this.ComentariosField = value;
                    this.RaisePropertyChanged("Comentarios");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime FechaPrevision {
            get {
                return this.FechaPrevisionField;
            }
            set {
                if ((this.FechaPrevisionField.Equals(value) != true)) {
                    this.FechaPrevisionField = value;
                    this.RaisePropertyChanged("FechaPrevision");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Humedad {
            get {
                return this.HumedadField;
            }
            set {
                if ((this.HumedadField.Equals(value) != true)) {
                    this.HumedadField = value;
                    this.RaisePropertyChanged("Humedad");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Mapa {
            get {
                return this.MapaField;
            }
            set {
                if ((object.ReferenceEquals(this.MapaField, value) != true)) {
                    this.MapaField = value;
                    this.RaisePropertyChanged("Mapa");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Precipitaciones {
            get {
                return this.PrecipitacionesField;
            }
            set {
                if ((this.PrecipitacionesField.Equals(value) != true)) {
                    this.PrecipitacionesField = value;
                    this.RaisePropertyChanged("Precipitaciones");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Provincia {
            get {
                return this.ProvinciaField;
            }
            set {
                if ((object.ReferenceEquals(this.ProvinciaField, value) != true)) {
                    this.ProvinciaField = value;
                    this.RaisePropertyChanged("Provincia");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TempMax {
            get {
                return this.TempMaxField;
            }
            set {
                if ((this.TempMaxField.Equals(value) != true)) {
                    this.TempMaxField = value;
                    this.RaisePropertyChanged("TempMax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TempMin {
            get {
                return this.TempMinField;
            }
            set {
                if ((this.TempMinField.Equals(value) != true)) {
                    this.TempMinField = value;
                    this.RaisePropertyChanged("TempMin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Valoracion {
            get {
                return this.ValoracionField;
            }
            set {
                if ((object.ReferenceEquals(this.ValoracionField, value) != true)) {
                    this.ValoracionField = value;
                    this.RaisePropertyChanged("Valoracion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Viento {
            get {
                return this.VientoField;
            }
            set {
                if ((this.VientoField.Equals(value) != true)) {
                    this.VientoField = value;
                    this.RaisePropertyChanged("Viento");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MeteoService.MeteoIService")]
    public interface MeteoIService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MeteoIService/MiMetodo", ReplyAction="http://tempuri.org/MeteoIService/MiMetodoResponse")]
        bool MiMetodo(FormsMeteo.MeteoService.UserDetails userDetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MeteoIService/MiMetodo", ReplyAction="http://tempuri.org/MeteoIService/MiMetodoResponse")]
        System.Threading.Tasks.Task<bool> MiMetodoAsync(FormsMeteo.MeteoService.UserDetails userDetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MeteoIService/NuevoRegistro", ReplyAction="http://tempuri.org/MeteoIService/NuevoRegistroResponse")]
        int NuevoRegistro(FormsMeteo.MeteoService.UserDetails userDetails, FormsMeteo.MeteoService.Meteo registro);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MeteoIService/NuevoRegistro", ReplyAction="http://tempuri.org/MeteoIService/NuevoRegistroResponse")]
        System.Threading.Tasks.Task<int> NuevoRegistroAsync(FormsMeteo.MeteoService.UserDetails userDetails, FormsMeteo.MeteoService.Meteo registro);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MeteoIService/EditarRegistro", ReplyAction="http://tempuri.org/MeteoIService/EditarRegistroResponse")]
        int EditarRegistro(FormsMeteo.MeteoService.UserDetails userDetails, FormsMeteo.MeteoService.Meteo registro);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MeteoIService/EditarRegistro", ReplyAction="http://tempuri.org/MeteoIService/EditarRegistroResponse")]
        System.Threading.Tasks.Task<int> EditarRegistroAsync(FormsMeteo.MeteoService.UserDetails userDetails, FormsMeteo.MeteoService.Meteo registro);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MeteoIService/EliminarRegistro", ReplyAction="http://tempuri.org/MeteoIService/EliminarRegistroResponse")]
        int EliminarRegistro(FormsMeteo.MeteoService.UserDetails userDetails, string provincia, System.DateTime fechaprevision);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MeteoIService/EliminarRegistro", ReplyAction="http://tempuri.org/MeteoIService/EliminarRegistroResponse")]
        System.Threading.Tasks.Task<int> EliminarRegistroAsync(FormsMeteo.MeteoService.UserDetails userDetails, string provincia, System.DateTime fechaprevision);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MeteoIService/BuscarRegistro", ReplyAction="http://tempuri.org/MeteoIService/BuscarRegistroResponse")]
        FormsMeteo.MeteoService.Meteo BuscarRegistro(FormsMeteo.MeteoService.UserDetails userDetails, string provincia, System.DateTime fechaprevision);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MeteoIService/BuscarRegistro", ReplyAction="http://tempuri.org/MeteoIService/BuscarRegistroResponse")]
        System.Threading.Tasks.Task<FormsMeteo.MeteoService.Meteo> BuscarRegistroAsync(FormsMeteo.MeteoService.UserDetails userDetails, string provincia, System.DateTime fechaprevision);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MeteoIService/mostrarRegistros", ReplyAction="http://tempuri.org/MeteoIService/mostrarRegistrosResponse")]
        FormsMeteo.MeteoService.Meteo[] mostrarRegistros(FormsMeteo.MeteoService.UserDetails userDetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MeteoIService/mostrarRegistros", ReplyAction="http://tempuri.org/MeteoIService/mostrarRegistrosResponse")]
        System.Threading.Tasks.Task<FormsMeteo.MeteoService.Meteo[]> mostrarRegistrosAsync(FormsMeteo.MeteoService.UserDetails userDetails);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface MeteoIServiceChannel : FormsMeteo.MeteoService.MeteoIService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MeteoIServiceClient : System.ServiceModel.ClientBase<FormsMeteo.MeteoService.MeteoIService>, FormsMeteo.MeteoService.MeteoIService {
        
        public MeteoIServiceClient() {
        }
        
        public MeteoIServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MeteoIServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MeteoIServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MeteoIServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool MiMetodo(FormsMeteo.MeteoService.UserDetails userDetails) {
            return base.Channel.MiMetodo(userDetails);
        }
        
        public System.Threading.Tasks.Task<bool> MiMetodoAsync(FormsMeteo.MeteoService.UserDetails userDetails) {
            return base.Channel.MiMetodoAsync(userDetails);
        }
        
        public int NuevoRegistro(FormsMeteo.MeteoService.UserDetails userDetails, FormsMeteo.MeteoService.Meteo registro) {
            return base.Channel.NuevoRegistro(userDetails, registro);
        }
        
        public System.Threading.Tasks.Task<int> NuevoRegistroAsync(FormsMeteo.MeteoService.UserDetails userDetails, FormsMeteo.MeteoService.Meteo registro) {
            return base.Channel.NuevoRegistroAsync(userDetails, registro);
        }
        
        public int EditarRegistro(FormsMeteo.MeteoService.UserDetails userDetails, FormsMeteo.MeteoService.Meteo registro) {
            return base.Channel.EditarRegistro(userDetails, registro);
        }
        
        public System.Threading.Tasks.Task<int> EditarRegistroAsync(FormsMeteo.MeteoService.UserDetails userDetails, FormsMeteo.MeteoService.Meteo registro) {
            return base.Channel.EditarRegistroAsync(userDetails, registro);
        }
        
        public int EliminarRegistro(FormsMeteo.MeteoService.UserDetails userDetails, string provincia, System.DateTime fechaprevision) {
            return base.Channel.EliminarRegistro(userDetails, provincia, fechaprevision);
        }
        
        public System.Threading.Tasks.Task<int> EliminarRegistroAsync(FormsMeteo.MeteoService.UserDetails userDetails, string provincia, System.DateTime fechaprevision) {
            return base.Channel.EliminarRegistroAsync(userDetails, provincia, fechaprevision);
        }
        
        public FormsMeteo.MeteoService.Meteo BuscarRegistro(FormsMeteo.MeteoService.UserDetails userDetails, string provincia, System.DateTime fechaprevision) {
            return base.Channel.BuscarRegistro(userDetails, provincia, fechaprevision);
        }
        
        public System.Threading.Tasks.Task<FormsMeteo.MeteoService.Meteo> BuscarRegistroAsync(FormsMeteo.MeteoService.UserDetails userDetails, string provincia, System.DateTime fechaprevision) {
            return base.Channel.BuscarRegistroAsync(userDetails, provincia, fechaprevision);
        }
        
        public FormsMeteo.MeteoService.Meteo[] mostrarRegistros(FormsMeteo.MeteoService.UserDetails userDetails) {
            return base.Channel.mostrarRegistros(userDetails);
        }
        
        public System.Threading.Tasks.Task<FormsMeteo.MeteoService.Meteo[]> mostrarRegistrosAsync(FormsMeteo.MeteoService.UserDetails userDetails) {
            return base.Channel.mostrarRegistrosAsync(userDetails);
        }
    }
}
